{"scope":"PUBLIC","source":"package hmeq_xgboost / overwrite=yes;\ndcl package pymas pm;\ndcl package logger logr('App.MM.Python.DS2');\ndcl varchar(32767) character set utf8 pypgm;\ndcl int resultCode revision;\n\nmethod score(double \"LOAN\",\ndouble \"MORTDUE\",\ndouble \"VALUE\",\nvarchar(100) \"REASON\",\nvarchar(100) \"JOB\",\ndouble \"YOJ\",\ndouble \"DEROG\",\ndouble \"DELINQ\",\ndouble \"CLAGE\",\ndouble \"NINQ\",\ndouble \"CLNO\",\ndouble \"DEBTINC\",\nin_out double resultCode,\nin_out double \"P_Bad1\",\nin_out double \"EM_EVENTPROBABILITY\",\nin_out varchar(270) \"msg\");\n\n   resultCode = revision = 0;\n   if null(pm) then do;\n      pm = _new_ pymas();\n      resultCode = pm.useModule('model_exec_b9f2fa37-2ed2-4cee-b318-16ce50a17d03', 1);\n      if resultCode then do;\n         resultCode = pm.appendSrcLine('import sys');\n         resultCode = pm.appendSrcLine('sys.path.append(\"/modules/e9d6db04-c548-460d-8739-d78c17c42cc7/\")');\n         resultCode = pm.appendSrcLine('import settings_e9d6db04_c548_460d_8739_d78c17c42cc7');\n         resultCode = pm.appendSrcLine('settings_e9d6db04_c548_460d_8739_d78c17c42cc7.pickle_path = \"/modules/e9d6db04-c548-460d-8739-d78c17c42cc7/\"');\n         resultCode = pm.appendSrcLine('import hmeq_xgboost_47b19a3a_3ed5_4751_a8f1_0841d574d3b0');\n         resultCode = pm.appendSrcLine('def scoreModel(LOAN, MORTDUE, VALUE, REASON, JOB, YOJ, DEROG, DELINQ, CLAGE, NINQ, CLNO, DEBTINC):');\n         resultCode = pm.appendSrcLine('    \"Output: P_Bad1, msg\"');\n         resultCode = pm.appendSrcLine('    return hmeq_xgboost_47b19a3a_3ed5_4751_a8f1_0841d574d3b0.scoreModel(LOAN, MORTDUE, VALUE, REASON, JOB, YOJ, DEROG, DELINQ, CLAGE, NINQ, CLNO, DEBTINC)');\n\n         revision = pm.publish(pm.getSource(), 'model_exec_b9f2fa37-2ed2-4cee-b318-16ce50a17d03');\n         if ( revision \u003c 1 ) then do;\n            logr.log( 'e', 'py.publish() failed.');\n            resultCode = -1;\n            return;\n         end;\n      end;\n   end;\n\n   resultCode = pm.useMethod('scoreModel');\n   if resultCode then do;\n      logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n      return;\n   end;\n   resultCode = pm.setDouble('LOAN', LOAN);\n   if resultCode then\n      logr.log('E', 'setDouble for LOAN failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('MORTDUE', MORTDUE);\n   if resultCode then\n      logr.log('E', 'setDouble for MORTDUE failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('VALUE', VALUE);\n   if resultCode then\n      logr.log('E', 'setDouble for VALUE failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('REASON', REASON);\n   if resultCode then\n      logr.log('E', 'setString for REASON failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('JOB', JOB);\n   if resultCode then\n      logr.log('E', 'setString for JOB failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('YOJ', YOJ);\n   if resultCode then\n      logr.log('E', 'setDouble for YOJ failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DEROG', DEROG);\n   if resultCode then\n      logr.log('E', 'setDouble for DEROG failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DELINQ', DELINQ);\n   if resultCode then\n      logr.log('E', 'setDouble for DELINQ failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('CLAGE', CLAGE);\n   if resultCode then\n      logr.log('E', 'setDouble for CLAGE failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('NINQ', NINQ);\n   if resultCode then\n      logr.log('E', 'setDouble for NINQ failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('CLNO', CLNO);\n   if resultCode then\n      logr.log('E', 'setDouble for CLNO failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DEBTINC', DEBTINC);\n   if resultCode then\n      logr.log('E', 'setDouble for DEBTINC failed.  resultCode=$s', resultCode);\n   resultCode = pm.execute();\n   if (resultCode) then\n      logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n   else do;\n      \"P_Bad1\" = pm.getDouble('P_Bad1');\n      \"EM_EVENTPROBABILITY\" = pm.getDouble('EM_EVENTPROBABILITY');\n      \"msg\" = pm.getString('msg');\n   end;\nend;\n\n endpackage;","properties":[{"name":"sourceURI","value":"/modelRepository/models/e9d6db04-c548-460d-8739-d78c17c42cc7"}]}