{
  "creationTimeStamp": "2024-04-09T19:31:28.572986Z",
  "createdBy": "Paata.Ugrekhelidze@sas.com",
  "modifiedTimeStamp": "2024-04-09T19:31:28.572987Z",
  "modifiedBy": "Paata.Ugrekhelidze@sas.com",
  "id": "c7f884e9-75c3-43ef-b247-4315d41075a7",
  "destinationName": "Gitpaugre",
  "destination": {
    "creationTimeStamp": "2024-03-26T14:59:05.96947Z",
    "createdBy": "Paata.Ugrekhelidze@sas.com",
    "modifiedTimeStamp": "2024-03-26T14:59:05.96947Z",
    "modifiedBy": "Paata.Ugrekhelidze@sas.com",
    "version": 2,
    "id": "d89a07aa-00d4-44a4-b672-db15489a46c0",
    "name": "Gitpaugre",
    "destinationType": "git",
    "properties": [
      {
        "name": "credDomainId",
        "value": "git_paugre"
      },
      {
        "name": "remoteRepositoryURL",
        "value": "https://github.com/paataugrekhelidze/ModelMangerRepo.git"
      },
      {
        "name": "localRepositoryLocation",
        "value": "/mmprojectpublic"
      },
      {
        "name": "userEmail",
        "value": "paataugrekhelidze@gmail.com"
      },
      {
        "name": "userName",
        "value": "paataugrekhelidze"
      },
      {
        "name": "gitBranch",
        "value": "main"
      },
      {
        "name": "deploymentGitFolder",
        "value": "/deploymentTest"
      }
    ],
    "links": [
      {
        "method": "GET",
        "rel": "up",
        "href": "/modelPublish/destinations",
        "uri": "/modelPublish/destinations",
        "type": "application/vnd.sas.collection"
      },
      {
        "method": "GET",
        "rel": "self",
        "href": "/modelPublish/destinations/Gitpaugre",
        "uri": "/modelPublish/destinations/Gitpaugre",
        "type": "application/vnd.sas.models.publishing.destination"
      },
      {
        "method": "DELETE",
        "rel": "delete",
        "href": "/modelPublish/destinations/Gitpaugre",
        "uri": "/modelPublish/destinations/Gitpaugre"
      },
      {
        "method": "PUT",
        "rel": "update",
        "href": "/modelPublish/destinations/Gitpaugre",
        "uri": "/modelPublish/destinations/Gitpaugre",
        "type": "application/vnd.sas.models.publishing.destination"
      },
      {
        "method": "GET",
        "rel": "getGitFolders",
        "href": "/modelPublish/destinations/Gitpaugre/gitFolders",
        "uri": "/modelPublish/destinations/Gitpaugre/gitFolders",
        "type": "application/vnd.sas.collection"
      }
    ]
  },
  "content": {
    "creationTimeStamp": "0001-01-01T00:00:00Z",
    "modifiedTimeStamp": "0001-01-01T00:00:00Z",
    "modelName": "llm_guardrails_ollama",
    "principalID": "020a3df1-d44b-4782-80e7-945fdd37cd78",
    "codeType": "python",
    "code": "package llm_guardrails_ollama / overwrite=yes;\ndcl package pymas pm;\ndcl package logger logr('App.MM.Python.DS2');\ndcl varchar(32767) character set utf8 pypgm;\ndcl int resultCode revision;\n\nmethod score(varchar(1000) \"prompt\",\nvarchar(1000) \"system\",\nvarchar(8000) \"history\",\nvarchar(200) \"model\",\nvarchar(200) \"embedder\",\nvarchar(200) \"collection\",\nvarchar(200) \"host\",\ndouble \"model_port\",\ndouble \"vector_port\",\nin_out double resultCode,\nin_out varchar(4000) \"response\");\n\n   resultCode = revision = 0;\n   if null(pm) then do;\n      pm = _new_ pymas();\n      resultCode = pm.useModule('model_exec_0f4624a9-caf6-4dbe-b8d4-259a4870e275', 1);\n      if resultCode then do;\n         resultCode = pm.appendSrcLine('import sys');\n         resultCode = pm.appendSrcLine('sys.path.append(\"/models/resources/viya/020a3df1-d44b-4782-80e7-945fdd37cd78/\")');\n         resultCode = pm.appendSrcLine('import settings_020a3df1_d44b_4782_80e7_945fdd37cd78');\n         resultCode = pm.appendSrcLine('settings_020a3df1_d44b_4782_80e7_945fdd37cd78.pickle_path = \"/models/resources/viya/020a3df1-d44b-4782-80e7-945fdd37cd78/\"');\n         resultCode = pm.appendSrcLine('import llm_guardrails_ollama_e890f122_63f2_483b_8190_17b198faf675');\n         resultCode = pm.appendSrcLine('def scoreModel(prompt, system, history, model, embedder, collection, host, model_port, vector_port):');\n         resultCode = pm.appendSrcLine('    \"Output: response\"');\n         resultCode = pm.appendSrcLine('    return llm_guardrails_ollama_e890f122_63f2_483b_8190_17b198faf675.scoreModel(prompt, system, history, model, embedder, collection, host, model_port, vector_port)');\n\n         revision = pm.publish(pm.getSource(), 'model_exec_0f4624a9-caf6-4dbe-b8d4-259a4870e275');\n         if ( revision \u003c 1 ) then do;\n            logr.log( 'e', 'py.publish() failed.');\n            resultCode = -1;\n            return;\n         end;\n      end;\n   end;\n\n   resultCode = pm.useMethod('scoreModel');\n   if resultCode then do;\n      logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n      return;\n   end;\n   resultCode = pm.setString('prompt', prompt);\n   if resultCode then\n      logr.log('E', 'setString for prompt failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('system', system);\n   if resultCode then\n      logr.log('E', 'setString for system failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('history', history);\n   if resultCode then\n      logr.log('E', 'setString for history failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('model', model);\n   if resultCode then\n      logr.log('E', 'setString for model failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('embedder', embedder);\n   if resultCode then\n      logr.log('E', 'setString for embedder failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('collection', collection);\n   if resultCode then\n      logr.log('E', 'setString for collection failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('host', host);\n   if resultCode then\n      logr.log('E', 'setString for host failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('model_port', model_port);\n   if resultCode then\n      logr.log('E', 'setDouble for model_port failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('vector_port', vector_port);\n   if resultCode then\n      logr.log('E', 'setDouble for vector_port failed.  resultCode=$s', resultCode);\n   resultCode = pm.execute();\n   if (resultCode) then\n      logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n   else do;\n      \"response\" = pm.getString('response');\n   end;\nend;\n\nendpackage;\n",
    "sourceURI": "/modelRepository/models/020a3df1-d44b-4782-80e7-945fdd37cd78",
    "projectID": "a27ab0e8-da60-4a9d-a97a-c0859543ea3f",
    "projectVersionID": "aca3ddeb-1a42-4ddd-8be1-053fd8d3b489",
    "modelID": "020a3df1-d44b-4782-80e7-945fdd37cd78",
    "modelVersionID": "5.0",
    "publishLevel": "model",
    "variableXML": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cScore\u003e\n  \u003cTargetList\u003e\u003c/TargetList\u003e\n  \u003cProducer\u003e\n    \u003cName\u003eSAS Model Manager\u003c/Name\u003e\n    \u003cVersion\u003e15.1\u003c/Version\u003e\n  \u003c/Producer\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"prompt\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"system\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"history\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"model\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"embedder\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"collection\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"host\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"model\"_port\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"vector_port\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cOutput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"response\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Output\u003e\n\u003c/Score\u003e"
  },
  "properties": {
    "gitFolderPath": "llm_guardrails_ollama",
    "gitRepositoryURL": "https://github.com/paataugrekhelidze/ModelMangerRepo.git"
  },
  "sourceURI": "/modelRepository/models/020a3df1-d44b-4782-80e7-945fdd37cd78",
  "inputVariables": null,
  "outputVariables": null,
  "component": {},
  "product": {},
  "service": {
    "name": "Model Publish service"
  },
  "baseImage": {}
}